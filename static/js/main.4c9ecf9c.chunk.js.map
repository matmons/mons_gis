{"version":3,"sources":["helpers/getRandomColor.js","components/Navbar/UploadItem.js","components/Navbar/NavHeader.js","components/Navbar/NavLayer.js","components/Navbar/LayerItem.js","helpers/operationFunctions.js","components/Navbar/OperationModal.js","helpers/OperationList.js","components/Navbar/Operations.js","components/Navbar/Navbar.js","components/Map.js","App.js","index.js"],"names":["getRandomColor","color","i","Math","floor","random","UploadItem","addLayer","useState","show","setShow","handleClose","handleShow","onDrop","useCallback","file","reader","FileReader","onabort","console","log","onerror","onload","jsonString","GeoJSON","JSON","parse","newLayer","id","name","toString","data","addedToMap","convertJSONToLayer","result","readAsText","useDropzone","getRootProps","getInputProps","isDragActive","Row","Col","md","onClick","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","NavHeader","className","size","LayerMenuItem","map","layer","removeLayer","localColorIcon","setColor","localEyeIcon","setEye","toggleVisibility","layerId","getLayoutProperty","setLayoutProperty","OverlayTrigger","trigger","placement","overlay","Popover","as","Content","onChangeComplete","event","hex","setPaintProperty","Provider","value","LayerItem","layers","dropdown","toggleDropdown","NavLayer","detailLevelHelper","type","union","features","OperationModal","operation","layerIds","setLayerIds","parameters","setParameters","handleSubmit","title","bufferLayer","layer1","radius","buff","buffer","Buffer","find","layerList","addNewLayer","intersected","layer2","l1","l2","intersectLayer","intersect","Intersect","unionLayer","Union","diffLayer","diff","difference","Difference","alert","preventDefault","description","style","margin","Form","l","Group","controlId","Label","Control","onChange","e","target","required","default","Object","entries","key","params","OperationList","Radius","OperationItem","op","navStyle","position","top","left","width","background","padding","zIndex","Navbar","Container","Operations","mapStyle","bottom","right","menuStyle","display","backgroundLayers","mapboxgl","accessToken","Map","setMap","backgroundLayerID","setbackgroundLayerID","setLayers","mapContainer","useRef","useEffect","container","current","center","zoom","on","resize","initializeMap","setStyle","filter","forEach","addSource","visibility","updateMap","oldLayers","removeSource","backgroundLayer","defaultChecked","ref","el","App","Application","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c9ecf9c.chunk.js","sourcesContent":["const getRandomColor = () => {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\nexport default getRandomColor;","import React, { useState, useCallback } from 'react'\nimport { FaUpload } from \"react-icons/fa\"\nimport { Row, Col, Modal, Button } from \"react-bootstrap\"\nimport { useDropzone } from \"react-dropzone\"\n\nimport getRandomColor from \"./../../helpers/getRandomColor\"\n\nconst UploadItem = ({ addLayer }) => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const convertJSONToLayer = (jsonString) => {\n        const GeoJSON = JSON.parse(jsonString);\n        const newLayer = {\n            id: GeoJSON.name ? GeoJSON.name : (Math.floor(Math.random() * 1000)).toString(),\n            data: GeoJSON,\n            addedToMap: false,\n            color: getRandomColor()\n        }\n        addLayer(newLayer);\n    }\n\n    const onDrop = useCallback((file) => {\n        const reader = new FileReader()\n\n        reader.onabort = () => console.log('Reading was aborted')\n        reader.onerror = () => console.log('Reading has failed')\n\n        reader.onload = function () {\n            convertJSONToLayer(reader.result)\n        }\n        reader.readAsText(file[0])\n\n    }, [])\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n    return (\n        <>\n            <Row>\n                <Col md={1}><FaUpload onClick={() => handleShow()} /></Col>\n                <Col md={7} onClick={() => handleShow()}>\n                    <h5>Upload</h5>\n                </Col>\n            </Row>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Upload</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        {\n                            isDragActive ?\n                                <p>Drop the files here ...</p> :\n                                <p>Drag & drop files here or click to select files</p>\n                        }\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\nexport default UploadItem","import React from 'react'\nimport { FaGlobeAmericas, } from \"react-icons/fa\"\nimport { Row, Col } from \"react-bootstrap\"\n\nconst NavHeader = () => {\n    return (\n        <>\n            <Row className=\"strictRow\">\n                <Col md={2} >\n                    <FaGlobeAmericas size={32} />\n                </Col>\n                <Col md={8}>\n                    <h2> Mons GIS </h2>\n                </Col>\n                <Col md={2} />\n            </Row>\n        </>\n    )\n}\nexport default NavHeader","import React, { useState } from 'react'\nimport { Row, Col, OverlayTrigger, Popover } from \"react-bootstrap\"\nimport { IconContext } from \"react-icons\"\nimport { FaEye, FaEyeSlash, FaTimes, FaCircle } from 'react-icons/fa';\nimport { CirclePicker } from \"react-color\"\n\nconst LayerMenuItem = ({ map, layer, removeLayer }) => {\n    const [localColorIcon, setColor] = useState(layer.color)\n    const [localEyeIcon, setEye] = useState(\"visible\")\n\n    const toggleVisibility = (layerId) => {\n        const visibility = map.getLayoutProperty(layerId, \"visibility\");\n        if (visibility === 'visible') {\n            map.setLayoutProperty(layerId, 'visibility', 'none');\n            setEye('none')\n        } else {\n            map.setLayoutProperty(layerId, 'visibility', 'visible')\n            setEye('visible')\n        }\n    };\n    const colorChange = (color, event) => {\n        setColor(color.hex)\n        layer.color = color.hex\n        map.setPaintProperty(layer.id, \"fill-color\", color.hex);\n    };\n    return (\n        <Row>\n            <Col md={1} />\n            <Col md={2}>{localEyeIcon === 'visible'\n                ? <FaEye onClick={() => {\n                    toggleVisibility(layer.id);\n                }} />\n                : <FaEyeSlash onClick={() => {\n                    toggleVisibility(layer.id)\n                }} />\n            }\n            </Col>\n            <Col md={4}>{layer.id}</Col>\n            <OverlayTrigger\n                trigger=\"click\"\n                key=\"right\"\n                placement=\"right\"\n                overlay={\n                    <Popover>\n                        <Popover.Title as=\"h3\">Change layer color</Popover.Title>\n                        <Popover.Content>\n                            <CirclePicker color={localColorIcon} onChangeComplete={colorChange} />\n                        </Popover.Content>\n                    </Popover>\n                }\n            >\n                <Col md={2}>\n                    <IconContext.Provider value={{ color: localColorIcon }}>\n                        <FaCircle />\n                    </IconContext.Provider>\n                </Col>\n            </OverlayTrigger>\n\n            <Col md={2}><FaTimes onClick={() => removeLayer(layer.id)} /></Col>\n        </Row>\n    )\n}\n\nexport default LayerMenuItem;\n","import React, { useState } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport { RiArrowDropDownLine, RiArrowDropRightLine } from 'react-icons/ri'\nimport { FaBuffer } from 'react-icons/fa'\nimport NavLayer from \"./NavLayer.js\"\n\nconst LayerItem = ({ map, layers, removeLayer }) => {\n    const [dropdown, toggleDropdown] = useState(false)\n\n    return (\n        <>\n            <Row >\n                <Col md={1}><FaBuffer onClick={() => toggleDropdown(!dropdown)} /></Col>\n                <Col md={7} onClick={() => toggleDropdown(!dropdown)}>\n                    <h5>Layers</h5>\n                </Col>\n                <Col md={3}>{dropdown\n                    ? <RiArrowDropDownLine size={20} onClick={() => toggleDropdown(!dropdown)} />\n                    : <RiArrowDropRightLine size={20} onClick={() => toggleDropdown(!dropdown)} />}\n                </Col>\n            </Row>\n            {\n                dropdown && layers.map(layer => (\n                    <NavLayer key={layer.id} map={map} layer={layer} removeLayer={removeLayer} />\n                ))\n            }\n        </>\n    )\n}\n\nexport default LayerItem;","import difference from '@turf/difference'\nimport intersect from '@turf/intersect'\nimport buffer from '@turf/buffer'\nimport union from '@turf/union'\nimport getRandomColor from './getRandomColor'\n\nexport const Buffer = (layer1, radius) => {\n    // Unecessary? Buffer works on collections.\n    // const l1 = detailLevelHelper(layer1.data)\n    var buff = buffer(layer1.data, radius)\n\n    const newLayer = {\n        id: 'Buff_' + layer1.id,\n        data: buff,\n        addedToMap: false,\n        color: getRandomColor()\n    }\n    return newLayer\n}\nexport const Intersect = (layer1, layer2) => {\n    const l1 = detailLevelHelper(layer1.data)\n    const l2 = detailLevelHelper(layer2.data)\n    var intersectLayer = intersect(l1, l2)\n\n    const newLayer = {\n        id: 'IS_' + layer1.id + '_' + layer2.id,\n        data: intersectLayer,\n        addedToMap: false,\n        color: getRandomColor()\n    }\n    return newLayer\n}\nexport const Union = (layer1, layer2) => {\n    var unionLayer = union(layer1.data, layer2.data)\n\n    const newLayer = {\n        id: 'Union_' + layer1.id + '_' + layer2.id,\n        data: unionLayer,\n        addedToMap: false,\n        color: getRandomColor()\n    }\n    return newLayer\n}\nexport const Difference = (layer1, layer2) => {\n    const l1 = detailLevelHelper(layer1.data)\n    const l2 = detailLevelHelper(layer2.data)\n    console.log(l1, l2)\n    var diff = difference(l1, l2)\n\n    const newLayer = {\n        id: 'Diff_' + layer1.id + '_' + layer2.id,\n        data: diff,\n        addedToMap: false,\n        color: getRandomColor()\n    }\n    return newLayer\n}\n\nconst detailLevelHelper = (data) => {\n    switch (data.type) {\n        case 'FeatureCollection':\n            return union(...data.features)\n        case 'Feature':\n            return data\n        default:\n            return data\n    }\n}","import React, { useState } from 'react'\nimport { Row, Button, Modal, Col, Form, Popover, OverlayTrigger } from 'react-bootstrap'\nimport { FaInfoCircle } from 'react-icons/fa'\nimport { Buffer, Intersect, Union, Difference } from '../../helpers/operationFunctions'\n\nconst OperationModal = ({ operation, layers, addLayer }) => {\n    const [layerIds, setLayerIds] = useState({})\n    const [parameters, setParameters] = useState({})\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const handleSubmit = (event) => {\n        switch (operation.title) {\n            case 'Buffer':\n                const buff_l1 = layers.find(layer => layer.id === layerIds[operation.layerList[0]])\n                var bufferLayer = Buffer(buff_l1, parameters['Radius'])\n                addNewLayer(event, bufferLayer)\n                break;\n            case 'Intersect':\n                const int_l1 = layers.find(layer => layer.id === layerIds[operation.layerList[0]])\n                const int_l2 = layers.find(layer => layer.id === layerIds[operation.layerList[1]])\n                var intersected = Intersect(int_l1, int_l2)\n                addNewLayer(event, intersected)\n                break;\n            case 'Union':\n                const union_l1 = layers.find(layer => layer.id === layerIds[operation.layerList[0]])\n                const union_l2 = layers.find(layer => layer.id === layerIds[operation.layerList[1]])\n                var unionLayer = Union(union_l1, union_l2)\n                addNewLayer(event, unionLayer)\n                break;\n            case 'Difference':\n                const diff_l1 = layers.find(layer => layer.id === layerIds[operation.layerList[0]])\n                const diff_l2 = layers.find(layer => layer.id === layerIds[operation.layerList[1]])\n                var diffLayer = Difference(diff_l1, diff_l2)\n                addNewLayer(event, diffLayer)\n                break;\n            default:\n                alert(\"Defaulted\")\n        }\n    }\n    const addNewLayer = (event, newLayer) => {\n        if (newLayer) {\n            addLayer(newLayer)\n        } else {\n            alert(\"No area to subtract\")\n        }\n        event.preventDefault()\n        setLayerIds([])\n    }\n\n    return (\n        <>\n            <Row>\n                <Col md={2} />\n                <Col md={6} onClick={handleShow}>\n                    {operation.title}\n                </ Col>\n                <Col md={3} onClick={handleShow} />\n            </Row>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{operation.title}\n                        <OverlayTrigger\n                            trigger=\"hover\"\n                            key=\"right\"\n                            placement=\"right\"\n                            overlay={\n                                <Popover>\n                                    <Popover.Title as=\"h3\">Help</Popover.Title>\n                                    <Popover.Content>\n                                        {operation.description}\n                                    </Popover.Content>\n                                </Popover>\n                            }\n                        >\n                            <FaInfoCircle style={{ margin: 4 }} />\n                        </OverlayTrigger>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        {operation.layerList.map((l) => {\n                            return (\n                                <Form.Group key={l} controlId={l} >\n                                    <Form.Label>Select {l}</Form.Label>\n                                    <Form.Control as=\"select\" onChange={(e) => setLayerIds((layers) => {\n                                        layers[l] = e.target.value\n                                        return layerIds\n                                    })} required>\n                                        <option key=\"blank\" default value={null}>---</option>\n                                        {layers.map(layer => (<option key={layer.id} value={layer.id}>{layer.name ? layer.name : layer.id}</option>))}\n                                    </Form.Control>\n                                </Form.Group>\n                            )\n                        })}\n                        {operation.parameters && Object.entries(operation.parameters).map(([key, value]) => {\n                            return (\n                                <Form.Group key={key} controlId={key.toString()} >\n                                    <Form.Label>{key.toString()}</Form.Label>\n                                    <Form.Control type={value} onChange={(e) => setParameters((params) => {\n                                        params[key] = e.target.value\n                                        return params\n                                    })} />\n                                </Form.Group>\n                            )\n                        })}\n\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" type=\"submit\" onClick={(e) => {\n                        handleSubmit(e);\n                        handleClose()\n                    }}>\n                        Add Layer\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default OperationModal;","var buffer = {\n    id: 1,\n    title: 'Buffer',\n    layerList: ['Layer 1'],\n    parameters: { Radius: 'number' },\n    description: \"The Buffer Operation takes the features from a source vector layer and creates a buffer area of a specified distance around, storing the result on a Result Layer.\"\n}\nvar intersect = {\n    id: 2,\n    title: 'Intersect',\n    layerList: ['Layer 1', 'Layer 2'],\n    parameters: {},\n    description: \"The Intersect Operation calculates the geometric intersection of two layers.\"\n}\n\nvar union = {\n    id: 3,\n    title: 'Union',\n    layerList: ['Layer 1', 'Layer 2'],\n    parameters: {},\n    description: \"The Union Operation combines the features from two layers into a single, composite layer.\"\n}\n\nvar difference = {\n    id: 4,\n    title: 'Difference',\n    layerList: ['Layer 1', 'Layer 2'],\n    parameters: {},\n    description: \"The Difference Operation finds the difference between two polygons by clipping the second polygon from the first.\"\n}\n\nconst OperationList = [buffer, intersect, union, difference]\n\nexport default OperationList","import React, { useState } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport { RiArrowDropDownLine, RiArrowDropRightLine } from 'react-icons/ri'\nimport { FaTools } from 'react-icons/fa'\nimport OperationModal from \"./OperationModal\"\nimport OperationList from \"../../helpers/OperationList\"\n\nconst OperationItem = ({ layers, addLayer }) => {\n    const [dropdown, toggleDropdown] = useState(false)\n    return (\n        <>\n            <Row >\n                <Col md={1}><FaTools /></Col>\n                <Col md={7} onClick={() => toggleDropdown(!dropdown)}>\n                    <h5>Operations</h5>\n                </Col>\n                <Col md={3}>{dropdown\n                    ? <RiArrowDropDownLine size={20} onClick={() => toggleDropdown(!dropdown)} />\n                    : <RiArrowDropRightLine size={20} onClick={() => toggleDropdown(!dropdown)} />}\n                </Col>\n            </Row>\n            {\n                dropdown && OperationList.map(op => (\n                    <OperationModal key={op.id} operation={op} layers={layers} addLayer={addLayer} />\n                ))\n            }\n        </>\n    )\n}\n\nexport default OperationItem","import React from 'react'\nimport { Container, Col } from \"react-bootstrap\"\nimport UploadItem from \"./UploadItem\"\nimport NavHeader from \"./NavHeader\"\nimport LayerItem from \"./LayerItem\"\nimport Operations from \"./Operations\"\n\nconst navStyle = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    background: \"white\",\n    color: \"black\",\n    padding: \"1em\",\n    margin: 10,\n    zIndex: \"1\",\n}\n\nconst Navbar = ({ map, layers, addLayer, removeLayer }) => {\n\n    return (\n        <>\n            <Col md={3}>\n                <Container style={navStyle}>\n                    <NavHeader />\n                    <Operations layers={layers} addLayer={addLayer} />\n                    <LayerItem map={map} layers={layers} removeLayer={removeLayer} />\n                    <UploadItem addLayer={addLayer} />\n                </Container>\n            </Col>\n        </>\n    )\n}\nexport default Navbar","import React, { useEffect, useRef, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport Navbar from \"./Navbar/Navbar\"\n\nconst mapStyle = {\n\tposition: \"absolute\",\n\ttop: 0,\n\tbottom: 0,\n\tright: 0,\n\tleft: 0,\n\tzIndex: \"-1\",\n};\n\nconst menuStyle = {\n\tposition: \"absolute\",\n\ttop: 0,\n\tright: 0,\n\tmargin: 10,\n\tpadding: 10,\n\tbackground: \"white\",\n\tzIndex: \"1\",\n\tdisplay: \"flex\",\n};\n\nconst backgroundLayers = [\n\t{ id: \"streets-v11\", name: \"Streets\" },\n\t{ id: \"light-v10\", name: \"Light\" },\n\t{ id: \"dark-v10\", name: \"Dark\" },\n\t{ id: \"satellite-v9\", name: \"Satellite\" },\n];\n\nmapboxgl.accessToken = \"pk.eyJ1IjoibW9uc2VtIiwiYSI6ImNraG4yc2syaTBiZ24ydGwxOTg0ZnJiMG0ifQ.B3OT7lkRhmt4w5lTa9fJ2w\"\n\nconst Map = () => {\n\tconst [map, setMap] = useState(null)\n\tconst [backgroundLayerID, setbackgroundLayerID] = useState(\"streets-v11\");\n\tconst [layers, setLayers] = useState([])\n\tconst mapContainer = useRef(null)\n\n\tuseEffect(() => {\n\t\tconst initializeMap = ({ setMap, mapContainer }) => {\n\t\t\tconst map = new mapboxgl.Map({\n\t\t\t\tcontainer: mapContainer.current,\n\t\t\t\tstyle: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n\t\t\t\tcenter: [10.3856, 63.4292],\n\t\t\t\tzoom: 12.2\n\t\t\t});\n\t\t\tmap.on(\"load\", () => {\n\t\t\t\tsetMap(map);\n\t\t\t\tmap.resize();\n\t\t\t});\n\t\t};\n\n\t\tif (!map) initializeMap({ setMap, mapContainer });\n\t\tif (map) map.setStyle(\"mapbox://styles/mapbox/\" + backgroundLayerID);\n\t}, [backgroundLayerID, map]);\n\n\tuseEffect(() => {\n\t\tconst updateMap = (map, layers) => {\n\t\t\tlayers.filter((l) => !l.addedToMap)\n\t\t\t\t.forEach((layer) => {\n\t\t\t\t\tmap.addSource(layer.id, {\n\t\t\t\t\t\t'type': 'geojson',\n\t\t\t\t\t\t'data': layer.data\n\t\t\t\t\t});\n\t\t\t\t\tmap.addLayer({\n\t\t\t\t\t\t'id': layer.id,\n\t\t\t\t\t\t'type': 'fill',\n\t\t\t\t\t\t'source': layer.id,\n\t\t\t\t\t\t'layout': {\n\t\t\t\t\t\t\tvisibility: 'visible'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'paint': {\n\t\t\t\t\t\t\t'fill-color': layer.color,\n\t\t\t\t\t\t\t'fill-opacity': 0.4\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tlayer.addedToMap = true;\n\t\t\t\t})\n\t\t}\n\t\tif (map && layers) updateMap(map, layers)\n\t}, [layers, map])\n\n\n\tconst addLayerToState = (layer) => {\n\t\tsetLayers((oldLayers) => [...oldLayers, layer]);\n\t}\n\tconst removeLayerFromState = (layerId) => {\n\t\tmap.removeLayer(layerId);\n\t\tmap.removeSource(layerId);\n\t\tsetLayers(layers => layers.filter(layer => layer.id !== layerId))\n\t}\n\tconst removeAllLayers = () => {\n\t\tsetLayers([])\n\t}\n\tconst toggleVisibility = (layerId) => {\n\t\tconst visibility = map.getLayoutProperty(layerId, \"visibility\");\n\t\tif (visibility === 'visible') {\n\t\t\tmap.setLayoutProperty(layerId, 'visibility', 'none');\n\t\t} else {\n\t\t\tmap.setLayoutProperty(layerId, 'visibility', 'visible')\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar map={map} layers={layers} addLayer={addLayerToState} removeLayer={removeLayerFromState} toggleVisibility={toggleVisibility} />\n\t\t\t<div style={menuStyle}>\n\t\t\t\t{backgroundLayers.map((backgroundLayer) => (\n\t\t\t\t\t<div key={backgroundLayer.id} style={{ margin: 4 }}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid={backgroundLayer.id}\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tname=\"rtoggle\"\n\t\t\t\t\t\t\tvalue={backgroundLayer.id}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetbackgroundLayerID(backgroundLayer.id);\n\t\t\t\t\t\t\t\tremoveAllLayers()\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdefaultChecked={backgroundLayer.id === backgroundLayerID}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label style={{ margin: 2 }}>{backgroundLayer.name}</label>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div ref={(el) => (mapContainer.current = el)} style={mapStyle} />\n\t\t</div>\n\t)\n\n}\nexport default Map;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Map from \"./components/Map\"\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<Map />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from \"./App\"\n\nclass Application extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<App />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nReactDOM.render(<Application />, document.getElementById('app'));"],"sourceRoot":""}